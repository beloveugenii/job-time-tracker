#!/usr/bin/env python3

import sqlite3, readline, sys, re, datetime
from ui import *
from libjtt import *
from init_db import *

menu_entries = ('add', 'remove', 'configure', 'help', 'next month', 'previous month', 'quit')
# НОВЫЕ ФУНКЦИИ


#  actions = { #'a': lambda args:
            #  'q': ex(0),
            #  'p': change_period(cur, current_period, direction)
            #  #  'p': lambda: print((datetime.date.today() - datetime.timedelta(31)).isoformat()),
            #  #  'n': lambda: print((datetime.date.today() + datetime.timedelta(31)).isoformat()),
            #  'default': lambda: print('Неизвестная команда'),
           #  }











PROG_NAME = 'job-time-tracker'
VERSION = '0.1.1.4'
DB_NAME = sys.path[0] + '/data.db'

#  readline.set_completer_delims('\n,')
readline.parse_and_bind('tab: complete')

con = sqlite3.connect(DB_NAME)
cur = con.cursor()

create_tables(cur)
con.commit()

wc = False

while True:
    current_period, wc = get_current_period(cur)
    
    period_params, wc = get_period_params(cur, current_period)
    
    if wc:
        con.commit()
        wc = not wc

    period_data = get_period_data(cur, current_period)    

    # Вывод на экран
    clear()
    header(' '.join((PROG_NAME, VERSION, ':', pretty_period(current_period))))
    
    if period_params is not None:
        print_as_table(calculate(period_params, period_data), ' ')
        line() 

    if period_data:
        print_as_table(pretty_period_data(period_data), ' ')
    else: 
        print('Нет данных за указанный период...')

    menu(menu_entries, 3)

    readline.set_completer(Completer([item[0] for item in menu_entries] + dd).complete)

    action, args = command_parser(''.join([w[0] for w in menu_entries]))

    if action in 'pn': wc = change_period(cur, current_period, action)
    
    elif action == 'h': help('main_help')

    elif action == 'a': wc = add_line(cur, args)

    elif action == 'q': ex(0)

    elif action == 'r': wc = remove_line(cur, period_data, args)
        
    

    if wc:
        con.commit()
        wc = not wc



    



con.close()
clear()





